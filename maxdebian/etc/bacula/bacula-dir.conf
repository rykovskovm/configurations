#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 9.4.2 (04 February 2019) -- debian buster/sid
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#

Director {                            # define myself
  Name = maxdebian-dir
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/etc/bacula/scripts/query.sql"
  WorkingDirectory = "/var/lib/bacula"
  PidDirectory = "/run/bacula"
  Maximum Concurrent Jobs = 1
  Password = "IGUnzpeDpSTcWr_AHYLcrMsF-UPnDR_DC"         # Console password
  Messages = Daemon
  DirAddress = 127.0.0.1
}

#####################
# My schedules
#####################

Schedule {
Name = "Every-Night-0"
Run = Full on 2-31 tue-sun at 00:00
}
Schedule {
Name = "Every-Night-1"
Run = Full on 2-31 tue-sun at 1:00
}
Schedule {
Name = "Every-Night-2"
Run = Full on 2-31 tue-sun at 2:00
}
Schedule {
Name = "Every-Night-3"
Run = Full on 2-31 tue-sun at 3:00
}
Schedule {
Name = "Every-Night-4"
Run = Full on 2-31 tue-sun at 4:00
}
Schedule {
Name = "Every-Night-5"
Run = Full on 2-31 tue-sun at 5:00
}
Schedule {
Name = "Every-Night-6"
Run = Full on 2-31 tue-sun at 6:00
}
Schedule {
Name = "Every-Night-7"
Run = Full on 2-31 tue-sun at 7:00
}
Schedule {
Name = "Every-Night-8"
Run = Full on 2-31 tue-sun at 8:00
}
Schedule {
Name = "Every-Night-9"
Run = Full on 2-31 tue-sun at 9:00
}
Schedule {
Name = "Every-Night-10"
Run = Full on 2-31 tue-sun at 10:00
}
Schedule {
Name = "Every-Night-17:15"
Run = Full on 2-31 tue-sun at 17:15
}


Schedule {
Name = "Every-Month-0"
Run = Full on 1 at 00:00
}
Schedule {
Name = "Every-Month-1"
Run = Full on 1 at 1:00
}
Schedule {
Name = "Every-Month-2"
Run = Full on 1 at 2:00
}
Schedule {
Name = "Every-Month-3"
Run = Full on 1 at 3:00
}
Schedule {
Name = "Every-Month-4"
Run = Full on 1 at 4:00
}
Schedule {
Name = "Every-Month-5"
Run = Full on 1 at 5:00
}
Schedule {
Name = "Every-Month-6"
Run = Full on 1 at 6:00
}
Schedule {
Name = "Every-Month-7"
Run = Full on 1 at 7:00
}
Schedule {
Name = "Every-Month-8"
Run = Full on 1 at 8:00
}
Schedule {
Name = "Every-Month-9"
Run = Full on 1 at 9:00
}
Schedule {
Name = "Every-Month-10"
Run = Full on 1 at 10:00
}

Storage {
  Name = max_buckups
  Address = 127.0.0.1
  SDPort = 9103
  Password = "w3CHcqcNjd4GCEXR3bvz3MmYkf6r9NXoL"
  Device = max_buckups
  Media Type = File
}

# Default pool definition
Pool {
  Name = Default
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 5G          # Limit Volume size to something reasonable
  Maximum Volumes = 2               # Limit number of Volumes in Pool
  Labelformat = "maxBuckup-"
  Maximum Volume Jobs = 1
}

# List of files to be backed up
FileSet {
  Name = "Full Set"
  Include {
    Options {
      signature = MD5
    }
 }
}
FileSet {
  Name = "etc"
  Include {
    Options {
       Signature = MD5
       Compression = GZIP
    }
    File = /etc
  }
}

Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sun at 23:05
  Run = Differential 2nd-5th sun at 23:05
  Run = Incremental mon-sat at 23:05
}

Schedule {
  Name = "Max-test"
  Run = Full Friday at 13:44
}


# Client (File Services) to backup
Client {
  Name = maxdebian-fd
  Address = localhost
  FDPort = 9102
  Catalog = MyCatalog
  Password = "HALreHevrJFSiizuYez1exLqM7_k1BAn-"          # password for FileDaemon
  File Retention = 60 days            # 60 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

# Generic catalog service
Catalog {
  Name = MyCatalog
  dbname = "bacula"; DB Address = "localhost"; dbuser = "bacula"; dbpassword = "freud105b"
}


#JobDefs {
#  Name = "DefaultJob"
#  Type = Backup
#  Level = Incremental
#  Client = maxdebian-fd
#  FileSet = "Full Set"
#  Schedule = "WeeklyCycle"
#  Storage = max_buckups
#  Messages = Standard
#  Pool = File
#  SpoolAttributes = yes
#  Priority = 10
#  Write Bootstrap = "/var/lib/bacula/%c.bsr"
#}


#
# Define the main nightly save backup job
#   By default, this job will back up to disk in /nonexistant/path/to/file/archive/dir
Job {
  Name = "etc backup"
  Type = Backup
  Level = Full
  FileSet="etc"
  Messages = Standard
  Pool = File
  SpoolAttributes = yes
  Client = maxdebian-fd
  Storage = max_buckups
  Schedule = "Every-Night-17:15"
  Priority = 12                   # run after main backup
}


# Backup the catalog database (after the nightly save)
Job {
  Name = "BackupCatalog"
  #JobDefs = "DefaultJob"
  Type = Backup
  Level = Full
  FileSet="Catalog"
  Messages = Standard
  Pool = File
  SpoolAttributes = yes
  Client = maxdebian-fd
  Storage = max_buckups
  Schedule = "WeeklyCycleAfterBackup"
  # This creates an ASCII copy of the catalog
  # Arguments to make_catalog_backup.pl are:
  #  make_catalog_backup.pl <catalog-name>
  RunBeforeJob = "/etc/bacula/scripts/make_catalog_backup.pl MyCatalog"
  # This deletes the copy of the catalog
  RunAfterJob  = "/etc/bacula/scripts/delete_catalog_backup"
  Write Bootstrap = "/var/lib/bacula/%n.bsr"
  Priority = 11                   # run after main backup
}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#
#Job {
#  Name = "RestoreFiles"
#  Type = Restore
#  Client=maxdebian-fd
#  Storage = File1
# The FileSet and Pool directives are not used by Restore Jobs
# but must not be removed
#  FileSet="Full Set"
#  Pool = File
#  Messages = Standard
#  Where = /nonexistant/path/to/file/archive/dir/bacula-restores
#}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 23:10
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/var/lib/bacula/bacula.sql"
  }
}


#  and to the console
Messages {
  Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address.
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

#
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = root = all, !skipped
  operator = root = mount
  console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
  append = "/var/log/bacula/bacula.log" = all, !skipped
  catalog = all
}


#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root = all, !skipped
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
}

# File Pool definition
Pool {
  Name = File
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  Label Format = "Vol-"               # Auto label test
}


# Scratch pool definition
Pool {
  Name = Scratch
  Pool Type = Backup
}

#
# Restricted console used by tray-monitor to get the status of the director
#
Console {
  Name = maxdebian-mon
  Password = "IZyyMYicmfiHVcwE5StFYl7U45hK6uGJM"
  CommandACL = status, .status
}
@/etc/bacula/clients/AS-1C-03.conf